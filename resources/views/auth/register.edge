@layout('master')
@section('content')
<section class="my_account_area pt--100 bg--white">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 col-12">
                <div class="my__account__wrapper" id="register">
                    <h3 class="account__title">Register</h3>
                    <div class="account__form">
                        <div class="input__box">
                            <label>Firstname <span>*</span></label>
                            <input type="text" name="firstname" v-model="firstname" class="form-control" :class="{'is-invalid': errors.has('firstname')}" v-validate="'required'" placeholder="Firstname">
                            <small class="text-danger" v-cloak>
                                @{{ errors.first('firstname') }}
                            </small>
                        </div>
                        <div class="input__box">
                            <label>Middlename <span>*</span></label>
                            <input type="text" name="middlename" v-model="middlename" class="form-control" :class="{'is-invalid': errors.has('middlename')}" v-validate="'required'" placeholder="Middle name">
                            <small class="text-danger" v-cloak>
                                @{{ errors.first('middlename') }}
                            </small>
                        </div>
                        <div class="input__box">
                            <label>Lastname <span>*</span></label>
                            <input type="text" name="lastname" v-model="lastname" class="form-control" :class="{'is-invalid': errors.has('lastname')}" v-validate="'required'" placeholder="Lastname">
                            <small class="text-danger" v-cloak>
                                @{{ errors.first('lastname') }}
                            </small>
                        </div>
                        <div class="input__box">
                            <label>Contact number <span>*</span></label>
                            <input type="contact_no" name="contact_no" v-model="contact_no" class="form-control" :class="{'is-invalid': errors.has('contact_no')}" v-validate="'required'" placeholder="Contact Number">
                            <small class="text-danger" v-cloak>
                                @{{ errors.first('contact_no') }}
                            </small>
                        </div>
                        <div class="input__box">
                            <label>Email address <span>*</span></label>
                            <input type="email" name="email" v-model="email" class="form-control" :class="{'is-invalid': errors.has('email')}" v-validate="'required|email'" placeholder="Email address">
                            <small class="text-danger" v-cloak>
                                @{{ errors.first('email') }}
                            </small>
                        </div>
                        <div class="input__box">
                            <label>Password<span>*</span></label>
                            <input type="password" name="password" v-model="password" class="form-control" :class="{'is-invalid': errors.has('password')}" v-validate="'required'" placeholder="Password" ref="password">
                            <small class="text-danger" v-cloak>
                                @{{ errors.first('password') }}
                            </small>
                        </div>
                        <div class="input__box">
                            <label>Confirm Password<span>*</span></label>
                            <input type="password" name="confirm_password" class="form-control" :class="{'is-invalid': errors.has('confirm_password')}" v-validate="'required|confirmed:password'" data-vv-as="password" placeholder="Confirm Password">
                            <small class="text-danger" v-cloak>
                                @{{ errors.first('confirm_password') }}
                            </small>
                        </div>
                        <div class="form__btn">
                            <a href="{{ route('auth.register') }}" 
                                onclick="event.preventDefault();"
                                v-on:click="submit"
                            >
                                Register
                            </a>
                            <ul>
                                <li v-for="error in errors.all()">{{ error }}</li>
                              </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@endsection

@section('extra_scripts')
<script type="text/javascript">
    const error_msg = {
        custom: {
            confirm_password: {
                required: 'The confirm password field is required.',
                confirmed: 'The password entered does not match the one above.',
                regex: 'Password does not allow spaces and whitespace',
            }
        }
    }

    Validator.localize('en', error_msg)

    new Vue({
        el: '#register',
            data () {
                return {
                    firstname: '',
                    middlename: '',
                    lastname: '',
                    contact_no: '',
                    email: '',
                    password: '',
                    _errors: null,
                }
            },
            mounted () {
            },
            methods: {
                submit() {
                    this.$validator.validate()
                        .then((valid) => {
                            if (!valid) {
                                Swal.fire(
                                    'Fail',
                                    'Please complete all the required fields.',
                                    'error',
                                )
                            }
                            else {
                                this.register()
                            }
                        })
                },
                register() {
                    var app = this
                    axios.post('{{route ('auth.register')}}',{
                        firstname: app.firstname,
                        middlename: app.middlename,
                        lastname: app.lastname,
                        contact_no: app.contact_no,
                        email: app.email,
                        password: app.password,
                    })
                    .then(function (response) {
                        if (response.data.status == 'success') {
                            Swal.fire(
                                response.data.message,
                                'Account has been created.',
                                response.data.status,
                            ).then(function(){
                                window.location = '{{ route('page.index') }}'
                            })
                        }
                        else if(response.data.status == 'error') {
                            var msg = ''
                            app._errors = response.data.message
                            response.data.message.forEach(messages => {
                                msg = messages.message
                                if(messages.field == 'email' && messages.validation == 'unique'){
                                    msg = 'The email address is already registered.'
                                }
                            });
                            
                            Swal.fire(
                                msg,
                                'Failed to create an account',
                                response.data.status,
                            ).then(function(){
                                app.showErrors()
                            })
                        }
                    })
                    .catch(function (response) {
                        Swal.fire(
                            'Error',
                            'Failed to create an account.',
                            'error',
                        )
                    })
                }, 
                showErrors() {
                    console.log(this._errors)
                    this._errors.forEach(message => {
                        var msg = message.message
                        if(message.field == 'email' && message.validation == 'unique'){
                            msg = 'The email address is already registered.'
                        }
                        this.$validator.errors.add({
                            field:message.field,
                            msg:msg
                        })
                    });
                }
            }
    })
</script>
@endsection