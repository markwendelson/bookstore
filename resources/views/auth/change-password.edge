@layout('master')
@section('content')
<section class="my_account_area pt--100 bg--white">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 col-12">
                <div class="my__account__wrapper" id="forgot-password">
                    <h3 class="account__title">Change Password</h3>
                    <div class="account__form">
                        <div class="input__box">
                            <label>Current Password <span>*</span></label>
                            <input type="current_password" name="current_password" v-model="current_password" class="form-control" :class="{'is-invalid': errors.has('current_password')}" v-validate="'required'" placeholder="Password">
                            <small class="text-danger" v-cloak>
                                @{{ errors.first('current_password') }}
                            </small>
                        </div>
                        <div class="input__box">
                            <label>Password<span>*</span></label>
                            <input type="password" name="password" v-model="password" class="form-control" :class="{'is-invalid': errors.has('password')}" v-validate="'required'" placeholder="Password" ref="password">
                            <small class="text-danger" v-cloak>
                                @{{ errors.first('password') }}
                            </small>
                        </div>
                        <div class="input__box">
                            <label>Confirm Password<span>*</span></label>
                            <input type="password" name="confirm_password" class="form-control" :class="{'is-invalid': errors.has('confirm_password')}" v-validate="'required|confirmed:password'" data-vv-as="password" placeholder="Confirm Password">
                            <small class="text-danger" v-cloak>
                                @{{ errors.first('confirm_password') }}
                            </small>
                        </div>
                        <div class="form__btn">
                            <a href="{{ route('auth.changepassword') }}" 
                                onclick="event.preventDefault();"
                                v-on:click="submit"
                            >
                                Change Password
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@endsection


@section('extra_scripts')
<script type="text/javascript">
    const error_msg = {
        custom: {
            confirm_password: {
                required: 'The confirm password field is required.',
                confirmed: 'The password entered does not match the one above.',
                regex: 'Password does not allow spaces and whitespace',
            },
            current_password: {
                required: 'The current password field is required.',
            }
        }
    }

    Validator.localize('en', error_msg)

    new Vue({
        el: '#forgot-password',
            data () {
                return {
                    password: '',
                    current_password: '',
                }
            },
            mounted () {
            },
            methods: {
                submit() {
                    this.$validator.validate()
                        .then((valid) => {
                            if (!valid) {
                                Swal.fire(
                                    'Fail',
                                    'Please complete all the required fields.',
                                    'error',
                                )
                            }
                            else {
                                this.changePassword()
                            }
                        })
                },
                changePassword() {
                    var app = this
                    axios.post('{{route ('auth.changepassword')}}',{
                        password: app.password,
                        current_password: app.current_password
                    })
                    .then(function (response) {
                        if (response.data.status == 'success') {
                            Swal.fire(
                                response.data.message,
                                'Account has been updated.',
                                response.data.status,
                            ).then(function(){
                                window.location = '{{ route('page.index') }}'
                            })
                        }
                        else if(response.data.status == 'error') {
                            Swal.fire(
                                response.data.message,
                                'Failed to update an account',
                                response.data.status,
                            ).then(function(){
                                app.showErrors()
                            })
                        }
                    })
                    .catch(function (response) {
                        Swal.fire(
                            'Error',
                            'Failed to update an account.',
                            'error',
                        )
                    })
                }, 
                showErrors() {
                    console.log(this._errors)
                    this._errors.forEach(message => {
                        var msg = message.message
                        if(message.field == 'email' && message.validation == 'unique'){
                            msg = 'The email address is already registered.'
                        }
                        this.$validator.errors.add({
                            field:message.field,
                            msg:msg
                        })
                    });
                }
            }
    })
</script>
@endsection