@layout('master')
@section('extra_css')
<style>
    .modal-form {
        background: black;
    }
    .modal-title {
        color: #029241;
    }
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

    .switch input { 
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 26px;
        width: 26px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
    }

    input:checked + .slider {
        background-color: #429242;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #429242;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

    .slider.round:before {
        border-radius: 50%;
    }
</style>
@endsection
@section('content')
<section class="cart-main-area section-padding--lg mt-5 bg--white">
    <div id="user-form" class="container">
        <div class="row">
            <div class="col-md-12 col-sm-12 ol-lg-12">
                <div class="row">
                    <div class="col-lg-6 col-12">
                        <h3 class="account__title">Users ({{users.length}})</h3>
                    </div>
                    <div class="col-lg-6 col-12">
                        <div class="account__form pt-0 pl-0 pb-0 pr-0 mb-1 mt-0 mr-2 pull-right">
                            <div class="form__btn">
                                <button onclick="event.preventDefault();" v-on:click="search">Search user</button>
                                {{--  <a href="{{ route('user.list') }}">View Book Categories</a>  --}}
                            </div>
                        </div>
                        <div class="contact-form-wrap">
                            <div class="single-contact-form space-between">
                                <input type="text" name="search" placeholder="Search user " v-model="filter_val">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-content wnro__table table-responsive">
                    <table>
                        <thead>
                            <tr class="title-top">
                                <th class="product-name">Firstname</th>
                                <th class="product-name">Middlename</th>
                                <th class="product-name">Lastname</th>
                                <th class="product-name">Email</th>
                                <th class="product-name">Can Buy and Sell</th>
                                <th class="product-name">Role</th>
                                <th class="product-name" style="border-right:1px"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if(!users.length)
                                <tr>
                                    <td class="product-name" colspan="7"><strong>No users found.</strong></td>
                                </tr>
                            @endif
                            @each(item in users)
                            <tr>
                                <td class="product-name">{{ item.firstname }}</td>
                                <td class="product-name">{{ item.middlename }}</td>
                                <td class="product-name">{{ item.lastname }}</td>
                                <td class="product-name">{{ item.email }}</td>
                                <td class="product-name">
                                    <label class="switch">
                                        <input type="checkbox" {{ item.can_buy_and_sell == 1 ? 'checked' : '' }} v-on:change="BuyAndSellChange({{ item.id }})" >
                                        <span class="slider round"></span>
                                      </label>
                                </td>
                                <td class="product-name">{{ item.is_admin == 1 ? 'Administrator' : 'User' }}</td>
                                <td class="product-name">
                                    {{--  <a href="{{ route('user.show', {id:item.id}) }}" onclick="event.preventDefault();" v-on:click="editModal({{ item.id }})">Edit</a>  --}}
                                    <a href="{{ route('user.delete', {id:item.id}) }}" onclick="event.preventDefault();" v-on:click="deleteUser({{ item.id }})">Remove</a>
                                </td>
                            </tr>
                            @endeach
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Start Book form Popup -->
        <div id="modal-form" class="box-search-content bookForm_active block-bg close__top modal-form">
            <div class="pull-left" style="top:35px;left:90px;font-size:large;position:relative">
                <h2 class="contact__title modal-title">@{{ state === 'add' ? 'Add New User' : 'Edit User' }}</h2>
            </div>
            <div class="col-lg-12 col-12" style="margin-top:90px;background: white;padding-top:20px;padding-bottom:50px">
                <div class="contact-form-wrap">
                    <div class="single-contact-form space-between">
                        <div class="row col-lg-12">
                            <div class="col-md-6">
                                <label class="pull-left ml-2">User Name</label>
                                <input type="text" name="user" placeholder="User Name*">
                            </div>
                        </div>
                    </div>
                    <div class="addtocart-btn pull-right mr-5 mt-0">
                        <a href="{{ route('user.store') }}" onclick="event.preventDefault();" v-on:click="submit">@{{ state === 'add' ? 'Save' : 'Update' }}</a>
                    </div>
                </div> 
            </div>
            <div class="close__wrap" v-on:click="closeModal">
                <span>close</span>
            </div>
        </div>
        <!-- End Book form Popup -->
    </div>  
</section>

@endsection

@section('extra_scripts')
<script type="text/javascript">
    new Vue({
        el: '#user-form',
            data () {
                return {
                    state: null,
                    filter_val: '',
                }
            },
            mounted () {
                
            },
            methods: {
                submit() {
                    var state = this.state
                    if (state == 'add')
                    {
                        this.saveUser()
                    }
                    else if (state =='edit'){
                        this.updateUser()
                    }
                },
                deleteUser(id) {
                    console.log('deleting ' +id)
                    Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                    })
                    .then((result) => {
                        // Send request to the server
                        if (result.value) {
                            axios.delete('/user/'+ id)
                            .then(function(response){
                                if (response.data.status == 'success') {
                                    Swal.fire(
                                        response.data.message,
                                        'Successfully delete.',
                                        response.data.status,
                                    ).then(function(){
                                        window.location = '{{ route('management.users') }}'
                                    })
                                }
                                else if(response.data.status == 'error') {
                                    Swal.fire(
                                        response.data.message,
                                        'Failed to delete book.',
                                        response.data.status,
                                    )
                                }
                            })
                            .catch(function (response) {
                                Swal.fire(
                                    response.message,
                                    'Failed to delete account.',
                                    response.message,
                                )
                            })
                        }
                    })
                },
                addModal() {
                    var app = this
                    app.state = 'add';
                    $('.bookForm_active').toggleClass('is-visible');
                    console.log(app.state)
                },
                editModal(id) {
                    var app = this
                    axios.get('user/' +id)
                    .then(function(response){
                        app.id = id
                        app.user = response.data.data.user
                    })
                    app.state = 'edit';
                    $('.bookForm_active').toggleClass('is-visible');
                    console.log(app.state)
                },
                saveUser() {
                    var app = this
                    console.log('user save')
                    axios.post('user/store',{
                        user: app.user,
                    })
                    .then(function(response){
                        if (response.data.status == 'success') {
                            Swal.fire(
                                response.data.message,
                                'Successfully added.',
                                response.data.status,
                            ).then(function(){
                                window.location = '{{ route('management.users') }}'
                            })
                        }
                        else if(response.data.status == 'error') {
                            Swal.fire(
                                response.data.message,
                                'Failed to add user.',
                                response.data.status,
                            )
                        }
                    })
                    .catch(function (response) {
                        Swal.fire(
                            response.message,
                            'Failed to add user.',
                            response.message,
                        )
                    })
                },
                updateUser() {
                    var app = this
                    console.log('user update')
                    axios.put('user/'+ app.id,{
                        user: app.user,
                    })
                    .then(function(response){
                        if (response.data.status == 'success') {
                            Swal.fire(
                                response.data.message,
                                'Successfully updated.',
                                response.data.status,
                            ).then(function(){
                                window.location = '{{ route('management.users') }}'
                            })
                        }
                        else if(response.data.status == 'error') {
                            Swal.fire(
                                response.data.message,
                                'Failed to update user.',
                                response.data.status,
                            )
                        }
                    })
                    .catch(function (response) {
                        Swal.fire(
                            response.message,
                            'Failed to update user.',
                            response.message,
                        )
                    })
                },
                closeModal() {
                    var app = this
                    app.state = '';
                    $('.bookForm_active').removeClass('is-visible');
                },

                BuyAndSellChange(id) {
                    var app = this
                    axios.put('management/users/can_buy_and_sell/'+ id,{
                    })
                    .then(function(response) {
                        if (response.data.status == 'success') {
                            Swal.fire(
                                response.data.message,
                                'Successfully updated.',
                                response.data.status,
                            ).then(function(){
                                app.sendNotification()
                                window.location = '{{ route('management.users') }}'
                            })
                        }
                        else if(response.data.status == 'error') {
                            Swal.fire(
                                response.data.message,
                                'Failed to update user.',
                                response.data.status,
                            )
                        }
                    })
                    .catch(function (response) {
                        Swal.fire(
                            response.message,
                            'Failed to update user.',
                            response.message,
                        )
                    })
                    
                },
                search() {
                    window.location = "{{ route('user.search') }}?q="+this.filter_val
                },
                sendNotification() {
                    console.log('message sent!')
                }
            }
    })
  </script>
@endsection