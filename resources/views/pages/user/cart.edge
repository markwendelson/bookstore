@layout('master')
@section('content')
<section class="cart-main-area section-padding--lg mt-5 bg--white">
    <div class="container" id="cart">
        <div class="row">
            <div class="col-md-12 col-sm-12 ol-lg-12">
                <h3 class="account__title">My Cart</h3>
                    <div class="table-content wnro__table table-responsive">
                        <table>
                            <thead>
                                <tr class="title-top">
                                    <th class="product-thumbnail">Image</th>
                                    <th class="product-name">Product</th>
                                    <th class="product-price">Price</th>
                                    <th class="product-quantity">Quantity</th>
                                    <th class="product-subtotal">Total</th>
                                <th class="product-remove">Remove</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if(!cart.length)
                                    <tr>
                                        <td class="product-name" colspan="6"><strong>Cart is empty</strong></td>
                                    </tr>
                                @endif
                                <tr v-for="item in myCart">
                                    <td class="product-thumbnail"><a href="#"><img src="/shopper/images/product/sm-3/1.jpg" alt="product img"></a></td>
                                    <td class="product-name"><a href="#">@{{ item.book.book_name }}</a></td>
                                    <td class="product-price"><span class="amount">@{{ item.book.price - (item.book.price * (item.book.discount/100)) }}</span></td>
                                    <td class="product-quantity"><input type="number" v-model="item.quantity"></td>
                                    <td class="product-subtotal">@{{ item.quantity * (item.book.price - (item.book.price * (item.book.discount/100))) }}</td>
                                    <td class="product-remove"><a href="#" @click="removeItem(item)">X</a></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                <div class="cartbox__btn">
                    <ul class="cart__btn__list d-flex flex-wrap flex-md-nowrap flex-lg-nowrap">
                        <li><a href="#" v-on:click="updateCart()">Update Cart</a></li>
                        <li class="ml-5"><a href="#" v-on:click="submitCart()" class="btn btn-submit">Check Out</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 offset-lg-6">
                <div class="cartbox__total__area">
                    <div class="cart__total__amount">
                        <span>Grand Total</span>
                        <span>Php {{ total }}</span>
                        <span v-text="cartTotal()"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>  
</section>
@endsection
@section('extra_scripts')
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>
<script type="text/javascript">
    new Vue({
        el: '#cart',
            data () {
                return {
                    myCart: []
                }
            },
            mounted () {
                this.getCart()
                    // Swal.fire(
                    //     'Updated!',
                    //     'Information has been updated.',
                    //     'success'
                    //     )
            },
            computed: {
                cartTotal() {
                    let total = [];
                    Object.entries(this.myCart).forEach(([key, val]) => {
                        total.push(val.price) // the value of the current key.
                    });
                    return total.reduce(function(total, num){ return total + num }, 0);
                }
            },
            methods: {
                getCart() {
                    var app = this
                    axios.get('/account/checkout')
                    .then(function (response) {
                        app.myCart = response.data
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
                },
                updateCart() {
                    Swal.fire(
                        'Updated!',
                        'Information has been updated.',
                        'success'
                        )
                },
                removeItem(item) {
                    var app = this

                    for( var i = 0; i < app.myCart.length; i++){ 
                        if ( app.myCart[i].id === item.id) {
                            app.myCart.splice(i, 1); 
                            i--;
                            console.log('deleted')
                        }
                    }
                },
                
            }
    })
</script>
@endsection